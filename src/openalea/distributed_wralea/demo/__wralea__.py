
# This file has been generated at Thu Feb  8 15:28:04 2018

from openalea.core import *


__name__ = 'openalea.distributed.demo'

__editable__ = True
__version__ = '1.6.0'
__license__ = 'CeCILL-C'
__authors__ = 'Me'


__all__ = ["_140533250630672"]


_140533250630672 = CompositeNodeFactory(uid='add_test',
                             name='add_test',
                             description='add two int',
                             category='workflow',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('pkg_test', 'float'),
   3: ('pkg_test', '+'),
   4: ('pkg_test', 'float'),
   5: ('pkg_test', 'float')},
                             elt_connections={  24639024: (3, 0, 5, 0), 24639048: (4, 0, 3, 1), 24639072: (2, 0, 3, 0)},
                             elt_data={  2: {  'block': False,
         'caption': '10.0',
         'delay': 0,
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 13.094401667846398,
         'posy': -59.11187038627804,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': '+',
         'delay': 0,
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 71.4580205302475,
         'posy': 2.6188803335692796,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '30.0',
         'delay': 0,
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 103.6328360569558,
         'posy': -59.86012191015497,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '40.0',
         'delay': 0,
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 73.73328254123777,
         'posy': 54.36267441599734,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set([]),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, '10.0')], 3: [], 4: [(0, '30.0')], 5: [], '__in__': [], '__out__': []},
                             elt_ad_hoc={  2: {  'position': [13.094401667846398, -59.11187038627804],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [71.4580205302475, 2.6188803335692796],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [103.6328360569558, -59.86012191015497],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [73.73328254123777, 54.36267441599734],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )
